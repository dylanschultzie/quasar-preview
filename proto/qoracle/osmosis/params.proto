syntax = "proto3";
package quasarlabs.quasarnode.qoracle.osmosis;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos/base/v1beta1/coin.proto";
import "ibc/core/client/v1/client.proto";

option go_package = "github.com/quasarlabs/quasarnode/x/qoracle/osmosis/types";

message Params {
  option (gogoproto.goproto_stringer) = false;
  
  bool enabled = 1 [(gogoproto.moretags) = "yaml:\"enabled\""];
  string epoch_identifier = 2 [(gogoproto.moretags) = "yaml:\"epoch_identifier\""]; // Identifier of the epoch that we trigger the icq request
  string authorized_channel = 3 [(gogoproto.moretags) = "yaml:\"authorized_channel\""]; // Identifier of authorized channel that we are allowed to send/receive packets
  ibc.core.client.v1.Height packet_timeout_height = 4
      [(gogoproto.moretags) = "yaml:\"packet_timeout_height\"", (gogoproto.nullable) = false]; // Timeout height relative to the current block height. The timeout is disabled when set to 0.
  uint64 packet_timeout_timestamp = 5 [(gogoproto.moretags) = "yaml:\"packet_timeout_timestamp\""]; // Timeout timestamp relative to counterparty chain current time. The timeout is disabled when set to 0.
}
